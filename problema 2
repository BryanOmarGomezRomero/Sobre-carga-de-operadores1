#include <iostream>
#include <string>
using namespace std;

class Materia {
private:
    int Clave;
    string Nombre;
    string ProfesorTutor;
    string Libro_deTexto;

public:
    Materia(int clave, const string& nombre, const string& profesor, const string& libro)
        : Clave(clave), Nombre(nombre), ProfesorTutor(profesor), Libro_deTexto(libro) {}

    void imprime() const {
        cout << "Clave: " << Clave << endl;
        cout << "Nombre: " << Nombre << endl;
        cout << "Profesor/Tutor: " << ProfesorTutor << endl;
        cout << "Libro de Texto: " << Libro_deTexto << endl;
    }

    void cambiaClave(int nuevaClave) {
        Clave = nuevaClave;
    }

    void cambiaProfe(const string& nuevoProfesor) {
        ProfesorTutor = nuevoProfesor;
    }

    // Sobrecarga del operador ==
    bool operator==(const Materia& otra) const {
        return Clave == otra.Clave;
    }

    // Sobrecarga del operador !=
    bool operator!=(const Materia& otra) const {
        return Clave != otra.Clave;
    }

    // Sobrecarga del operador <
    bool operator<(const Materia& otra) const {
        return Clave < otra.Clave;
    }

    // Sobrecarga del operador >
    bool operator>(const Materia& otra) const {
        return Clave > otra.Clave;
    }

    // Sobrecarga del operador <<
    friend ostream& operator<<(ostream& os, const Materia& materia) {
        os << "Clave: " << materia.Clave << endl;
        os << "Nombre: " << materia.Nombre << endl;
        os << "Profesor/Tutor: " << materia.ProfesorTutor << endl;
        os << "Libro de Texto: " << materia.Libro_deTexto << endl;
        return os;
    }

    // Sobrecarga del operador >>
    friend istream& operator>>(istream& is, Materia& materia) {
        is >> materia.Clave >> materia.Nombre >> materia.ProfesorTutor >> materia.Libro_deTexto;
        return is;
    }
};

int main() {
    Materia Programacion(101, "Programacion", "Profesor1", "Libro1");
    Materia Base_deDatos(102, "Base_deDatos", "Profesor2", "Libro2");

    int opcion;
    do {
        // Men√∫ de opciones
        cout << " Menu " << endl;
        cout << " 1. Cambiar clave de la materia Programacion" << endl;
        cout << " 2. Cambiar nombre del profesor de la materia Base_deDatos" << endl;
        cout << " 3. Imprimir todos los datos de la materia Base_deDatos" << endl;
        cout << " 0. Salir" << endl;
        cout << " Seleccione una opcion: ";
        cin >> opcion;

        switch (opcion) {
            case 1: {
                int nuevaClave;
                cout << "Ingrese la nueva clave: ";
                cin >> nuevaClave;
                Programacion.cambiaClave(nuevaClave);
                break;
            }
            case 2: {
                string nuevoProfesor;
                cout << "Ingrese el nuevo nombre del profesor: ";
                cin.ignore(); // Limpiar el buffer de entrada
                getline(cin, nuevoProfesor);
                Base_deDatos.cambiaProfe(nuevoProfesor);
                break;
            }
            case 3:
                Base_deDatos.imprime();
                break;
            case 0:
                cout << "Saliendo del programa";
                break;
            default:
                cout << "Opcion no valida. Intentelo de nuevo";
        }
    } while (opcion != 0);

    return 0;
}
